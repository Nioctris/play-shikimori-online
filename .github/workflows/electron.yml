# name of your github action
name: CI
# this will help you specify where to run
on:
  push:
    branches:
      # this will run on the electron branch
      - v2.0.x
# this is where the magic happens, each job happens in parallel btw
jobs:
  build_on_mac:
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@master
        with:
          ref: v2.0.x
      - uses: actions/setup-node@master
        with:
          node-version: 12.13
      - name: Install dependencies
        run: npm install
      - name: Build on MacOS
        run: npm run electron:build
  build_on_win:
    runs-on: windows-2016
    steps:
      - uses: actions/checkout@master
        with:
          ref: v2.0.x
      - uses: actions/setup-node@master
        with:
          node-version: 12.13
      - name: install node tools
        run: npm install --global --production windows-build-tools@4.0.0
      - name: Install dependencies
        run: npm install
      - name: Build on Windows
        run: npm run electron:build
  release:
    needs: [build_on_mac, build_on_win]
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true
      - name: Upload MacOS Release Asset
        id: upload-macos-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dist_electron/play-shikimori-app-0.1.0-mac.zip
          asset_name: MacOS.zip
          asset_content_type: application/zip
      - name: Upload Windows Release Asset
        id: upload-windows-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dist_electron\play-shikimori-app Setup 0.1.0.exe
          asset_name: play-shikimori-app Setup 0.1.0.exe
